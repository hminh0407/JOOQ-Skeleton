/**
 * This class is generated by jOOQ
 */
package com.personal.jooq.skeleton.jooq.generator;


import com.personal.jooq.skeleton.jooq.generator.tables.Author;
import com.personal.jooq.skeleton.jooq.generator.tables.Book;
import com.personal.jooq.skeleton.jooq.generator.tables.records.AuthorRecord;
import com.personal.jooq.skeleton.jooq.generator.tables.records.BookRecord;
import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> PK_T_AUTHOR = UniqueKeys0.PK_T_AUTHOR;
    public static final UniqueKey<BookRecord> PK_T_BOOK = UniqueKeys0.PK_T_BOOK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BookRecord, AuthorRecord> BOOK__FK_T_BOOK_AUTHOR_ID = ForeignKeys0.BOOK__FK_T_BOOK_AUTHOR_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AuthorRecord> PK_T_AUTHOR = createUniqueKey(Author.AUTHOR, "pk_t_author", Author.AUTHOR.ID);
        public static final UniqueKey<BookRecord> PK_T_BOOK = createUniqueKey(Book.BOOK, "pk_t_book", Book.BOOK.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<BookRecord, AuthorRecord> BOOK__FK_T_BOOK_AUTHOR_ID = createForeignKey(com.personal.jooq.skeleton.jooq.generator.Keys.PK_T_AUTHOR, Book.BOOK, "book__fk_t_book_author_id", Book.BOOK.AUTHOR_ID);
    }
}
